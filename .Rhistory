all.h.in.months <- 1:48
for(h in all.h.in.months){
Data_Shiller$xs_return_h <- Data_Shiller$xs_return
if(h>1){
for(i in 2:h){
Data_Shiller$xs_return_h[i:T] <- Data_Shiller$xs_return_h[i:T] +
Data_Shiller$xs_return[1:(T-i+1)]
}
}
Data_Shiller$xs_return_h <- 12/h*Data_Shiller$xs_return_h
y <- Data_Shiller$xs_return_h[indic.first.date.in.Shiller.database:
indic.last.date.in.Shiller.database]
x <- log(Data_Shiller$P.real/Data_Shiller$D.real)[(indic.first.date.in.Shiller.database-h):
(indic.last.date.in.Shiller.database-h)]
eq <- lm(y ~ x)
all.coef <- rbind(all.coef,
c(eq$coef[2],sqrt(NeweyWest(eq)[2,2])))
}
plot(1:max.matur,res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-.5,0))
lines(all.h.in.months/3,all.coef[,1],col="red")
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2)
sqrt(NeweyWest(eq)[2,2]
sqrt(NeweyWest(eq)[2,2])
sqrt(NeweyWest(eq)[2,2])
plot(1:max.matur,res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-1,.5))
lines(all.h.in.months/3,all.coef[,1],col="red")
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2)
abline(h=0,col="grey")
plot(1:max.matur,res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-.7,.2))
lines(all.h.in.months/3,all.coef[,1],col="red")
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2)
abline(h=0,col="grey")
plot(1:max.matur,res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-.6,.3))
lines(all.h.in.months/3,all.coef[,1],col="red")
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2)
abline(h=0,col="grey")
first.date <- as.Date("1985-01-01")
last.date  <- as.Date("2018-03-01")
indic.first.date.in.Shiller.database <- which(Data_Shiller$Date==first.date)
indic.last.date.in.Shiller.database  <- which(Data_Shiller$Date==last.date)
all.coef <- NULL
all.stdv <- NULL
all.h.in.months <- 1:48
for(h in all.h.in.months){
Data_Shiller$xs_return_h <- Data_Shiller$xs_return
if(h>1){
for(i in 2:h){
Data_Shiller$xs_return_h[i:T] <- Data_Shiller$xs_return_h[i:T] +
Data_Shiller$xs_return[1:(T-i+1)]
}
}
Data_Shiller$xs_return_h <- 12/h*Data_Shiller$xs_return_h
y <- Data_Shiller$xs_return_h[indic.first.date.in.Shiller.database:
indic.last.date.in.Shiller.database]
x <- log(Data_Shiller$P.real/Data_Shiller$D.real)[(indic.first.date.in.Shiller.database-h):
(indic.last.date.in.Shiller.database-h)]
eq <- lm(y ~ x)
all.coef <- rbind(all.coef,
c(eq$coef[2],sqrt(NeweyWest(eq)[2,2])))
}
plot(1:max.matur,res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-.6,.3))
lines(all.h.in.months/3,all.coef[,1],col="red")
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2)
abline(h=0,col="grey")
max.matur.XS.in.yrs <- 5
res.all.moments <- compute.moments(res.prices$Model.solved,
1:(4*max.matur.XS.in.yrs),
nb.values.s = NB.values.s,
h.stock = H.stock,
curvature = CURVATURE,
grid.4.S = NaN,
indic.slope.nom.curve,
indic.slope.rea.curve,
indic.condVar.nom.rate,
indic.condVar.rea.rate,
indic.compute.slopes = TRUE)
Data_Shiller <- read.csv("data/Shiller_Data_4R_new.csv")
Data_Shiller$Date <- as.Date(Data_Shiller$Date,"%d.%m.%Y")
T <- dim(Data_Shiller)[1]
Data_Shiller$return <- NaN
Data_Shiller$return[2:T] <- log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]/
Data_Shiller$P.real[1:(T-1)])
max.matur.XS.in.yrs <- 4
res.all.moments <- compute.moments(res.prices$Model.solved,
1:(4*max.matur.XS.in.yrs),
nb.values.s = NB.values.s,
h.stock = H.stock,
curvature = CURVATURE,
grid.4.S = NaN,
indic.slope.nom.curve,
indic.slope.rea.curve,
indic.condVar.nom.rate,
indic.condVar.rea.rate,
indic.compute.slopes = TRUE)
Data_Shiller <- read.csv("data/Shiller_Data_4R_new.csv")
Data_Shiller$Date <- as.Date(Data_Shiller$Date,"%d.%m.%Y")
T <- dim(Data_Shiller)[1]
Data_Shiller$return <- NaN
Data_Shiller$return[2:T] <- log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]/
Data_Shiller$P.real[1:(T-1)])
Data_Shiller$xs_return_h[i:T] <- Data_Shiller$xs_return_h[i:T] +
Data_Shiller$xs_return[1:(T-i+1)]
Data_Shiller$return[2:T] <- log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]/
Data_Shiller$P.real[1:(T-1)])
T
log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]/
Data_Shiller$P.real[1:(T-1)])
log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]
log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]/
(Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]
Data_Shiller <- read.csv("data/Shiller_Data_4R_new.csv")
Data_Shiller$Date <- as.Date(Data_Shiller$Date,"%d.%m.%Y")
T <- dim(Data_Shiller)[1]
Data_Shiller$return <- NaN
Data_Shiller$return[2:T] <- log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]/
Data_Shiller$P.real[1:(T-1)])
Data_Shiller$P
Data_Shiller <- read.csv("data/Shiller_Data_4R_new.csv")
Data_Shiller$Date <- as.Date(Data_Shiller$Date,"%d.%m.%Y")
T <- dim(Data_Shiller)[1]
T
Data_Shiller$P.real
names(Data_Shiller)
Data_Shiller <- read.csv("data/Shiller_Data_4R_new.csv")
Data_Shiller$Date <- as.Date(Data_Shiller$Date,"%d.%m.%Y")
T <- dim(Data_Shiller)[1]
Data_Shiller$P.real <- Data_Shiller$P/Data_Shiller$CPI
Data_Shiller$D.real <- Data_Shiller$D/Data_Shiller$CPI
Data_Shiller$return <- NaN
Data_Shiller$return[2:T] <- log((Data_Shiller$P.real + Data_Shiller$D.real/12)[2:T]/
Data_Shiller$P.real[1:(T-1)])
print(mean(12*Data_Shiller$return,na.rm=TRUE))
print(mean(12*Data_Shiller$return - Data_Shiller$rf/100,na.rm=TRUE))
Data_Shiller$xs_return <- Data_Shiller$return - Data_Shiller$rf/1200
first.date <- as.Date("1979-12-01")
last.date  <- as.Date("2001-03-01")
first.date <- as.Date("2001-04-01")
last.date  <- as.Date("2018-03-01")
first.date <- as.Date("1985-01-01")
last.date  <- as.Date("2018-03-01")
indic.first.date.in.Shiller.database <- which(Data_Shiller$Date==first.date)
indic.last.date.in.Shiller.database  <- which(Data_Shiller$Date==last.date)
all.coef <- NULL
all.stdv <- NULL
all.h.in.months <- 1:(12*max.matur.XS.in.yrs)
for(h in all.h.in.months){
Data_Shiller$xs_return_h <- Data_Shiller$xs_return
if(h>1){
for(i in 2:h){
Data_Shiller$xs_return_h[i:T] <- Data_Shiller$xs_return_h[i:T] +
Data_Shiller$xs_return[1:(T-i+1)]
}
}
Data_Shiller$xs_return_h <- 12/h*Data_Shiller$xs_return_h
y <- Data_Shiller$xs_return_h[indic.first.date.in.Shiller.database:
indic.last.date.in.Shiller.database]
x <- log(Data_Shiller$P.real/Data_Shiller$D.real)[(indic.first.date.in.Shiller.database-h):
(indic.last.date.in.Shiller.database-h)]
eq <- lm(y ~ x)
all.coef <- rbind(all.coef,
c(eq$coef[2],sqrt(NeweyWest(eq)[2,2])))
}
plot(1:max.matur,res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-.6,.3))
plot(1:max.matur,res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-.6,.3))
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,type="l",ylim=c(-.6,.3))
lines(all.h.in.months/3,all.coef[,1],col="red")
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2)
abline(h=0,col="grey")
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,
type="l",ylim=c(-.6,.3),lwd=2,las=2,xlab="holding period",ylab="slope coefficient")
lines(all.h.in.months/3,all.coef[,1],col="red",lwd=2)
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2,lwd=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2,lwd=2)
abline(h=0,col="grey")
file <- "Figure_XSreturns_regressions"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=5, height=3.5)
par(mfrow=c(1,1))
par(plt=c(.15,.95,.2,.95))
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,
type="l",ylim=c(-.6,.3),lwd=2,las=2,xlab="holding period",ylab="slope coefficient")
lines(all.h.in.months/3,all.coef[,1],col="red",lwd=2)
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="red",lty=2,lwd=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="red",lty=2,lwd=2)
abline(h=0,col="grey")
dev.off()
file <- "Figure_XSreturns_regressions"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=5, height=3.5)
par(mfrow=c(1,1))
par(plt=c(.15,.95,.2,.95))
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,
type="l",ylim=c(-.6,.3),lwd=2,las=2,xlab="holding period",ylab="slope coefficient")
lines(all.h.in.months/3,all.coef[,1],col="dark grey",lwd=2)
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="dark grey",lty=2,lwd=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="dark grey",lty=2,lwd=2)
abline(h=0,col="grey")
dev.off()
file <- "Figure_XSreturns_regressions"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=5, height=3.5)
par(mfrow=c(1,1))
par(plt=c(.15,.95,.2,.95))
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,
type="l",ylim=c(-.6,.3),lwd=2,las=2,xlab="holding period",ylab="slope coefficient")
lines(all.h.in.months/3,all.coef[,1],col="dark grey",lwd=2)
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="dark grey",lty=2,lwd=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="dark grey",lty=2,lwd=2)
abline(h=0,col="grey")
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("Data","Model (population coef.)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2,2), # line width
col=c("dark grey","black"), # gives the legend lines the correct color and width
bg="white",
seg.len = 3
)
dev.off()
file <- "Figure_XSreturns_regressions"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=5, height=3.5)
par(mfrow=c(1,1))
par(plt=c(.15,.95,.2,.95))
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,
type="l",ylim=c(-.7,.3),lwd=2,las=2,xlab="holding period",ylab="slope coefficient")
lines(all.h.in.months/3,all.coef[,1],col="dark grey",lwd=2)
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="dark grey",lty=2,lwd=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="dark grey",lty=2,lwd=2)
abline(h=0,col="grey")
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("Data","Model (population coef.)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2,2), # line width
col=c("dark grey","black"), # gives the legend lines the correct color and width
bg="white",
seg.len = 3
)
dev.off()
file <- "Figure_XSreturns_regressions"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=5, height=3.5)
par(mfrow=c(1,1))
par(plt=c(.15,.95,.2,.95))
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,
type="l",ylim=c(-.7,.3),lwd=2,las=1,xlab="holding period",ylab="slope coefficient")
lines(all.h.in.months/3,all.coef[,1],col="dark grey",lwd=2)
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="dark grey",lty=2,lwd=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="dark grey",lty=2,lwd=2)
abline(h=0,col="grey")
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("Data","Model (population coef.)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2,2), # line width
col=c("dark grey","black"), # gives the legend lines the correct color and width
bg="white",
seg.len = 3
)
dev.off()
file <- "Figure_XSreturns_regressions"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=5, height=3.5)
par(mfrow=c(1,1))
par(plt=c(.15,.95,.2,.95))
plot(1:(4*max.matur.XS.in.yrs),res.all.moments$all.slope.xs.logPD,
type="l",ylim=c(-.7,.3),lwd=2,las=1,xlab="holding period (in quarters)",ylab="slope coefficient")
lines(all.h.in.months/3,all.coef[,1],col="dark grey",lwd=2)
lines(all.h.in.months/3,all.coef[,1]+2*all.coef[,2],col="dark grey",lty=2,lwd=2)
lines(all.h.in.months/3,all.coef[,1]-2*all.coef[,2],col="dark grey",lty=2,lwd=2)
abline(h=0,col="grey")
legend("bottomleft", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("Data","Model (population coef.)"),
lty=c(1,1), # gives the legend appropriate symbols (lines)
lwd=c(2,2), # line width
col=c("dark grey","black"), # gives the legend lines the correct color and width
bg="white",
seg.len = 3
)
dev.off()
US_yields_q$date
names(US_yields_q)
start_index <- which(names(US_yields_q)=="SVENY01")
start_index
Index_mat1Yr <- which(names(US_yields_q)=="SVENY01")
Index_mat1Yr
Index_1Yr <- which(names(US_yields_q)=="SVENY01")
Index_1Yr
length(all.h)
all.coef <- matrix(NaN,10,length(all.h)) # 3 columns for
# Compute coefficients in the data:
first.date <- as.Date("1985-01-01")
last.date  <- as.Date("2018-03-01")
T <- length(US_yields_q$SVENY01)
Index_1Yr <- which(names(US_yields_q)=="SVENY01")
all.coef <- matrix(NaN,10,length(all.h))
all.stdv <- matrix(NaN,10,length(all.h))
count.h <- 0
for(h in all.h){
count.h <- count.h + 1
if(h==1){short.term <- 1.00*US_yields_q$DTB3 + 0.00*US_yields_q$SVENY01}
if(h==2){short.term <- 0.66*US_yields_q$DTB3 + 0.33*US_yields_q$SVENY01}
if(h==3){short.term <- 0.33*US_yields_q$DTB3 + 0.66*US_yields_q$SVENY01}
if(h==4){short.term <- 0.00*US_yields_q$DTB3 + 1.00*US_yields_q$SVENY01}
for(n in 1:10){
y <- US_yields_q[,Index_1Yr-1+n]
dep.var <- y[(1+h):T] - y[1:(T-h)]
indep.var <- h/(4*n - h) * (y - short.term)[1:(T-h)]
eq <- lm(dep.var ~ indep.var)
all.coef[n,count.h] <- eq$coef[2]
all.stdv[n,count.h] <- sqrt(NeweyWest(eq)[2,2])
}
}
dep.var
indep.var
h
n
# Compute coefficients in the data:
first.date <- as.Date("1985-01-01")
last.date  <- as.Date("2018-03-01")
T <- length(US_yields_q$SVENY01)
Index_1Yr <- which(names(US_yields_q)=="SVENY01")
all.coef <- matrix(NaN,10,length(all.h))
all.stdv <- matrix(NaN,10,length(all.h))
count.h <- 0
for(h in all.h){
count.h <- count.h + 1
if(h==1){short.term <- 1.00*US_yields_q$DTB3 + 0.00*US_yields_q$SVENY01}
if(h==2){short.term <- 0.66*US_yields_q$DTB3 + 0.33*US_yields_q$SVENY01}
if(h==3){short.term <- 0.33*US_yields_q$DTB3 + 0.66*US_yields_q$SVENY01}
if(h==4){short.term <- 0.00*US_yields_q$DTB3 + 1.00*US_yields_q$SVENY01}
for(n in 2:10){
y <- US_yields_q[,Index_1Yr-1+n]
dep.var <- y[(1+h):T] - y[1:(T-h)]
indep.var <- h/(4*n - h) * (y - short.term)[1:(T-h)]
eq <- lm(dep.var ~ indep.var)
all.coef[n,count.h] <- eq$coef[2]
all.stdv[n,count.h] <- sqrt(NeweyWest(eq)[2,2])
}
}
all.coef
all.stdv
plot(US_yields_q$DTB3)
plot(US_yields_q$SVENY01)
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity",ylab="regression coefficient",ylim=c(0,1),col="white")
abline(h=1,col="grey")
lines(1:max.matur/4,all.slopes[,1],lwd=2,lty=1)
lines(1:max.matur/4,all.slopes[,2],lwd=2,lty=2)
lines(1:max.matur/4,all.slopes[,3],lwd=2,lty=3)
lines(1:10,all.coef[,1],lwd=2,lty=1,col="grey")
lines(1:10,all.coef[,2],lwd=2,lty=2,col="grey")
lines(1:10,all.coef[,3],lwd=2,lty=3,col="grey")
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity",ylab="regression coefficient",ylim=c(-1,1),col="white")
lines(1:max.matur/4,all.slopes[,1],lwd=2,lty=1)
lines(1:10,all.coef[,1],lwd=2,lty=1,col="grey")
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity",ylab="regression coefficient",ylim=c(-2,1),col="white")
abline(h=1,col="grey")
lines(1:max.matur/4,all.slopes[,1],lwd=2,lty=1)
lines(1:10,all.coef[,1],lwd=2,lty=1,col="grey")
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity",ylab="regression coefficient",ylim=c(-4,1),col="white")
abline(h=1,col="grey")
lines(1:max.matur/4,all.slopes[,1],lwd=2,lty=1)
lines(1:10,all.coef[,1],lwd=2,lty=1,col="grey")
h!=4*n
all.coef <- matrix(NaN,10,length(all.h))
all.stdv <- matrix(NaN,10,length(all.h))
count.h <- 0
for(h in all.h){
count.h <- count.h + 1
if(h==1){short.term <- 1.00*US_yields_q$DTB3 + 0.00*US_yields_q$SVENY01}
if(h==2){short.term <- 0.66*US_yields_q$DTB3 + 0.33*US_yields_q$SVENY01}
if(h==3){short.term <- 0.33*US_yields_q$DTB3 + 0.66*US_yields_q$SVENY01}
if(h==4){short.term <- 0.00*US_yields_q$DTB3 + 1.00*US_yields_q$SVENY01}
for(n in 1:10){
y <- US_yields_q[,Index_1Yr-1+n]
dep.var <- y[(1+h):T] - y[1:(T-h)]
indep.var <- h/(4*n - h) * (y - short.term)[1:(T-h)]
if(h!=4*n){
eq <- lm(dep.var ~ indep.var)
all.coef[n,count.h] <- eq$coef[2]
all.stdv[n,count.h] <- sqrt(NeweyWest(eq)[2,2])
}
}
}
all.coef
all.stdv
all.h[i]
all.h
file <- "Figure_CS_regressions_comparisonData"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=8, height=4)
par(mfrow=c(1,3))
par(plt=c(.15,.95,.2,.95))
for(i in 1:length(all.h)){
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity",ylab="regression coefficient",ylim=c(-4,1),col="white",
main=paste("Holding period of ",all.h[i]," quarters",sep=""))
abline(h=1,col="grey")
lines(1:max.matur/4,all.slopes[,i],lwd=2,lty=1)
lines(1:10,all.coef[,i],lwd=2,lty=1,col="dark grey")
lines(1:10,all.coef[,i]-2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
lines(1:10,all.coef[,i]+2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
}
legend("bottomright", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("Data","Model"),
lty=c(1), # gives the legend appropriate symbols (lines)
lwd=c(2), # line width
col=c("black"), # gives the legend lines the correct color and width
#pt.bg=c(NaN,"blue",NaN),
#text.width = 2,
#cex=1.0,# size of the text
#pch = c(NaN,19,NaN),#symbols,
#pt.cex = c(NaN,1.5,NaN),
bg="white",
seg.len = 3
)
dev.off()
file <- "Figure_CS_regressions_comparisonData"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=8, height=4)
par(mfrow=c(1,3))
par(plt=c(.2,.95,.2,.8))
for(i in 1:length(all.h)){
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity",ylab="regression coefficient",ylim=c(-4,1),col="white",
main=paste("Holding period of ",all.h[i]," quarters",sep=""))
abline(h=1,col="grey")
lines(1:max.matur/4,all.slopes[,i],lwd=2,lty=1)
lines(1:10,all.coef[,i],lwd=2,lty=1,col="dark grey")
lines(1:10,all.coef[,i]-2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
lines(1:10,all.coef[,i]+2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
}
legend("bottomright", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("Data","Model"),
lty=c(1), # gives the legend appropriate symbols (lines)
lwd=c(2), # line width
col=c("black"), # gives the legend lines the correct color and width
#pt.bg=c(NaN,"blue",NaN),
#text.width = 2,
#cex=1.0,# size of the text
#pch = c(NaN,19,NaN),#symbols,
#pt.cex = c(NaN,1.5,NaN),
bg="white",
seg.len = 3
)
dev.off()
file <- "Figure_CS_regressions_comparisonData"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=8, height=4)
par(mfrow=c(1,3))
par(plt=c(.2,.95,.2,.8))
for(i in 1:length(all.h)){
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity",ylab="regression coefficient",ylim=c(-5,3),col="white",
main=paste("Holding period of ",all.h[i],ifelse(h==1," quarter"," quarters"),sep=""))
abline(h=1,col="grey")
lines(1:max.matur/4,all.slopes[,i],lwd=2,lty=1)
lines(1:10,all.coef[,i],lwd=2,lty=1,col="dark grey")
lines(1:10,all.coef[,i]-2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
lines(1:10,all.coef[,i]+2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
}
legend("bottomright", # places a legend at the appropriate place c("Health","Defense"), # puts text in the legend
c("Data","Model"),
lty=c(1), # gives the legend appropriate symbols (lines)
lwd=c(2), # line width
col=c("black"), # gives the legend lines the correct color and width
#pt.bg=c(NaN,"blue",NaN),
#text.width = 2,
#cex=1.0,# size of the text
#pch = c(NaN,19,NaN),#symbols,
#pt.cex = c(NaN,1.5,NaN),
bg="white",
seg.len = 3
)
dev.off()
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/CS_regressions.R", echo=TRUE)
file <- "Figure_CS_regressions_comparisonData"
pdf(file=paste(output.figures.folder,"/",file,".pdf",sep=""),
pointsize=10, width=8, height=4)
par(mfrow=c(1,3))
par(plt=c(.2,.95,.15,.85))
for(i in 1:length(all.h)){
plot(1:max.matur/4,all.slopes[,1],type="l",lwd=2,las=1,
xlab="maturity (in years)",ylab="regression coefficient",ylim=c(-5,3),col="white",
main=paste("Holding period of ",all.h[i],ifelse(h==1," quarter"," quarters"),sep=""))
abline(h=1,col="grey")
lines(1:max.matur/4,all.slopes[,i],lwd=2,lty=1)
lines(1:10,all.coef[,i],lwd=2,lty=1,col="dark grey")
lines(1:10,all.coef[,i]-2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
lines(1:10,all.coef[,i]+2*all.stdv[,i],lwd=2,lty=2,col="dark grey")
}
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/CS_regressions.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/CS_regressions.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/CS_regressions.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/CS_regressions.R", echo=TRUE)
# Chart showing excess return regressions:
source('prepare_outputs/CS_regressions.R')
source('prepare_outputs/make.tables.yds.fit.R')
source('prepare_outputs/make.table.yds.fit.R')
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
