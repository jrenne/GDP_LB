ylim=c(0,1.2*max(pdf.nom$y,pdf.rea$y,pdf.GDP$y)),
xlim=x.lim)
lines(pdf.nom$x,pdf.nom$y,lwd=2,col="dark grey",lty=2)
lines(pdf.rea$x,pdf.rea$y,lwd=2,col="dark grey",lty=1)
lines(pdf.GDP$x,pdf.GDP$y,lwd=2,col="black",lty=1)
abline(h=0)
if((i==1)*(j==1))
legend("topright",
c("Nominal bonds",
"ILBs",
"GDP-LBs"),
lty=c(2,1,1), # gives the legend appropriate symbols (lines)
lwd=c(2,2,2), # line width
col=c("dark grey","dark grey","black"), # gives the legend lines the correct color and width
bg="white",
seg.len = 2
)
}
}
x.lim
par(mfrow=c(length(vector.of.H),length(horizons.used.4.plots)))
par(plt = c(.05,.95,.25,.85))
for(i in 1:length(vector.of.H)){
for(j in 1:length(horizons.used.4.plots)){
if(horizons.used.4.plots[j]<21){
x.lim <- c(.8,1.2)
}else{
x.lim <- c(.5,2)
}
# Nominal bonds:
pdf.nom <- density(all.sim.d[max.matur+horizons.used.4.plots[j],,1,i])
#,bw = bw.4.kernel.density*sqrt(horizons.used.4.plots[j]))
pdf.rea <- density(all.sim.d[max.matur+horizons.used.4.plots[j],,2,i])
#,bw = bw.4.kernel.density*sqrt(horizons.used.4.plots[j]))
pdf.GDP <- density(all.sim.d[max.matur+horizons.used.4.plots[j],,3,i])
#,bw = bw.4.kernel.density*sqrt(horizons.used.4.plots[j]))
plot(pdf.nom$x,pdf.nom$y,type="l",
main=paste("Maturity of bonds: ",toString(vector.of.H[i]/FREQ),ifelse(vector.of.H[i]<=4," year","  years"),", Horizon: ",toString(horizons.used.4.plots[j]/FREQ)," years",sep=""),
yaxt="n",ylab="",xlab="Debt-to-GDP ratio",
col="white",lwd=1,
ylim=c(0,1.2*max(pdf.nom$y,pdf.rea$y,pdf.GDP$y)),
xlim=x.lim)
lines(pdf.nom$x,pdf.nom$y,lwd=2,col="dark grey",lty=2)
lines(pdf.rea$x,pdf.rea$y,lwd=2,col="dark grey",lty=1)
lines(pdf.GDP$x,pdf.GDP$y,lwd=2,col="black",lty=1)
abline(h=0)
if((i==1)*(j==1))
legend("topright",
c("Nominal bonds",
"ILBs",
"GDP-LBs"),
lty=c(2,1,1), # gives the legend appropriate symbols (lines)
lwd=c(2,2,2), # line width
col=c("dark grey","dark grey","black"), # gives the legend lines the correct color and width
bg="white",
seg.len = 2
)
}
}
all.sim.d[max.matur+horizons.used.4.plots[j],,1,i]
vector.of.H
i
plot(pdf.nom)
all.sim.d[max.matur+horizons.used.4.plots[j],,2,i]
Model
Model <- Model.est
dim8all.sim.d
dim(all.sim.d)
res.sim.debt$all.d
res.sim.debt$Nominal.GDP
res.sim.debt$Rolling.nominal.GDP
res.sim.debt$Nominal.GDP / res.sim.debt$Rolling.nominal.GDP
simulated.GDP.growth
plot(all.sim.d)
plot(simulated.GDP.growth,type="l")
dev.off()
plot(simulated.GDP.growth,type="l")
mean(simulated.GDP.growth,type="l")
ini.debt.to.GDP
(ini.debt.to.GDP/res.sim.debt$all.d[max.matur+1])
res.sim.debt$all.d
ini.debt.to.GDP
res.sim.debt$all.d[max.matur+1]
debt.time.series
res.sim.debt$all.d
ini.debt.to.GDP
set.seed(124)
NB.values.s <- 100 # number of discretized values of s
fixed.bs <- -0.01 # fixed budget primary surplus
ini.debt.to.GDP <- 4.00 # expressed in GDP percent (nominal GDP of one model period)
vector.of.H           <- c(4,40) # Maturites of issued bonds -- expressed at the model frequency
horizons.used.4.plots <- c(8,80) # Horizons considered, expressed in number of model periods
N.sim <- 200 # number of simulations
#N.sim <- 200 # number of simulations
source('simulations/run.debt.dyn_PDFs.R')
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/procedures/set.of.procedures.macrofinance.model.R", echo=TRUE)
set.seed(124)
NB.values.s <- 100 # number of discretized values of s
fixed.bs <- -0.01 # fixed budget primary surplus
ini.debt.to.GDP <- 4.00 # expressed in GDP percent (nominal GDP of one model period)
vector.of.H           <- c(4,40) # Maturites of issued bonds -- expressed at the model frequency
horizons.used.4.plots <- c(8,80) # Horizons considered, expressed in number of model periods
N.sim <- 200 # number of simulations
#N.sim <- 200 # number of simulations
source('simulations/run.debt.dyn_PDFs.R')
res.mom.pi.z$E.z
plot(res.mom.pi.z$E.z)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/procedures/set.of.procedures.macrofinance.model.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/procedures/set.of.procedures.Estimation.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/estimation/load.ini.model.R", echo=TRUE)
Full.Theta
Full.Theta <- Model.2.Theta(Model)
Model <- Theta.2.Model(Full.Theta)
Model
Model.est$delta
indic.estim
indic.start.from.last
indic.start.from.last <- 0
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/estimation/load.ini.model.R", echo=TRUE)
Model
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
Theta.ini <- Full.Theta[Filter==1]
compute.criteria(Theta.ini,
vec.maturities = vec.maturities.4.estimation,
nb.values.s = NB.values.s,
h.stock = H.stock,
curvature = CURVATURE,
grid.4.S = NaN,
indic.the.ones.used.in.nom.curve = indic.the.ones.used.in.nom.curve,
indic.the.ones.used.in.rea.curve = indic.the.ones.used.in.rea.curve,
indic.slope.nom.curve = indic.slope.nom.curve,
indic.slope.rea.curve = indic.slope.rea.curve,
indic.condVar.nom.rate = indic.condVar.nom.rate,
indic.condVar.rea.rate = indic.condVar.rea.rate,
all.targets = all.targets,
all.weights = all.weights,
weight.historical.fit = weight.historical.fit)
NB.values.s
NB.values.s <- 50
Theta.ini <- Full.Theta[Filter==1]
compute.criteria(Theta.ini,
vec.maturities = vec.maturities.4.estimation,
nb.values.s = NB.values.s,
h.stock = H.stock,
curvature = CURVATURE,
grid.4.S = NaN,
indic.the.ones.used.in.nom.curve = indic.the.ones.used.in.nom.curve,
indic.the.ones.used.in.rea.curve = indic.the.ones.used.in.rea.curve,
indic.slope.nom.curve = indic.slope.nom.curve,
indic.slope.rea.curve = indic.slope.rea.curve,
indic.condVar.nom.rate = indic.condVar.nom.rate,
indic.condVar.rea.rate = indic.condVar.rea.rate,
all.targets = all.targets,
all.weights = all.weights,
weight.historical.fit = weight.historical.fit)
Model.est
vec.maturities.4.estimation
vec.maturities.4.table <- 4*c(1,2,5,10)
# Approximation method:
NB.values.s <- 100
max.matur <- 40 # expressed at the model frequency
vec.maturities <- 1:max.matur
# Build estimated model:
Model.est <- Theta.2.Model(Full.Theta)
vec.maturities.4.table <- 4*c(1,2,5,10)
# ==============================================================================
# Solve the model and get prices' specifications:
res.prices <- compute.prices(Model.est,
vec.maturities.4.table,
nb.values.s = NB.values.s,
h.stock = 1,
curvature = CURVATURE,
grid.4.S = NaN)
# Run filtering approach:
res.estim <-  estimate.latent.factors(res.prices,
dc.US,dy.US,pi.US,
gdp.forecast.4Q,infl.forecast.4Q,
gdp.forecast.8Q,infl.forecast.8Q,
US_yields_q)
res.prices$vec.maturities
maturities.in.yrs.yields <- c(1,2,5,10)
indic.of.yds.in.res.prices <- c(
which(res.prices$vec.maturities == Model$freq*maturities.in.yrs.yields[1]),
which(res.prices$vec.maturities == Model$freq*maturities.in.yrs.yields[2])
)
indic.of.yds.in.res.prices
vec.maturities.4.table
dim8res.prices$all.nom.bond.F.yields
dim(res.prices$all.nom.bond.F.yields)
res.estim$z.hat
fitted1 <- res.prices$all.nom.bond.F.yields[1,res.estim$z.hat] + res.prices$all.nom.bond.b.yields[1] * pi.hat
plot(fitted1)
res.prices$all.nom.bond.b.yields
fitted01yr <- res.prices$all.nom.bond.F.yields[1,res.estim$z.hat] + res.prices$all.nom.bond.b.yields[1] * pi.hat
fitted02yr <- res.prices$all.nom.bond.F.yields[2,res.estim$z.hat] + res.prices$all.nom.bond.b.yields[2] * pi.hat
fitted05yr <- res.prices$all.nom.bond.F.yields[3,res.estim$z.hat] + res.prices$all.nom.bond.b.yields[3] * pi.hat
fitted10yr <- res.prices$all.nom.bond.F.yields[4,res.estim$z.hat] + res.prices$all.nom.bond.b.yields[4] * pi.hat
plot(fitted02yr)
US_yields_q$SVENY01/100
observed02yr_real <- US_yields_q$TIPSY02/100
observed05yr_real <- US_yields_q$TIPSY05/100
observed10yr_real <- US_yields_q$TIPSY10/100
observed01yr_nom  <- US_yields_q$SVENY01/100
observed02yr_nom  <- US_yields_q$SVENY02/100
observed05yr_nom  <- US_yields_q$SVENY05/100
observed10yr_nom  <- US_yields_q$SVENY10/100
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
fitted <- cbind(fitted02yr_real,
fitted05yr_real,
fitted10yr_real,
fitted01yr_nom,
fitted02yr_nom,
fitted05yr_nom,
fitted10yr_nom)
stdev.observed <- apply(observed,2,function(x){var(x,na.rm = TRUE)})
stdev.observed <- apply(observed,2,function(x){sd(x,na.rm = TRUE)})
stdev.observed
stdev.error<- apply(fitted - observed,2,function(x){sd(x,na.rm = TRUE)})
stdev.error
stdev.error^2/stdev.observed^2
USY_Yds_TermPremium <- read.csv("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/data/USY_Yds_TermPremium.csv")
View(USY_Yds_TermPremium)
USY_Yds_TermPremium <- read.csv("data/USY_Yds_TermPremium.csv")
names(USY_Yds_TermPremium)
USY_Yds_TermPremium$DATE <- as.Date(USY_Yds_TermPremium$DATE)
USY_Yds_TermPremium$DATE
vec.dates
first.year <- format(USY_Yds_TermPremium$DATE[1],"Y")
first.year
first.year <- format(USY_Yds_TermPremium$DATE[1],"%Y")
first.year
first.year <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%Y"))
first.year
first.Q.month    <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%m"))
first.month    <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%m"))
first.month
format(USY_Yds_TermPremium$DATE[1]
)
USY_Yds_TermPremium$DATE[1]
last.date
USY_Yds_TermPremium$year  <- as.numeric(format(USY_Yds_TermPremium$DATE,"%Y"))
USY_Yds_TermPremium$month <- as.numeric(format(USY_Yds_TermPremium$DATE,"%m"))
Q <- 1
c(3*Q-1 + 1:3)
c(3*(Q-1) + 1:3))
c(3*(Q-1) + 1:3)
Q <- 2
c(3*(Q-1) + 1:3)
USY_Yds_TermPremium_Q <- data.frame(USY_Yds_TermPremium[1,])
USY_Yds_TermPremium_Q
USY_Yds_TermPremium <- read.csv("data/USY_Yds_TermPremium.csv")
USY_Yds_TermPremium$DATE <- as.Date(USY_Yds_TermPremium$DATE)
first.year <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%Y"))
last.year  <- as.numeric(format(last.date,"%Y"))
USY_Yds_TermPremium$year  <- as.numeric(format(USY_Yds_TermPremium$DATE,"%Y"))
USY_Yds_TermPremium$month <- as.numeric(format(USY_Yds_TermPremium$DATE,"%m"))
USY_Yds_TermPremium_Q <- data.frame(USY_Yds_TermPremium[1,])
count <- 0
for(year in first.year:last.year){
for(Q in 1:4){
count <- count + 1
data.tempo <- subset(USY_Yds_TermPremium(year==year)&(month %in% c(3*(Q-1) + 1:3)))
USY_Yds_TermPremium_Q[count,] <- apply(data.tempo,2,function(x){mean(x,na.rm=TRUE)})
data.tempo$Date[count] <- as.Date(paste(year,"-",3*(Q-1)+1,"-01",sep=""))
}
}
USY_Yds_TermPremium <- read.csv("data/USY_Yds_TermPremium.csv")
USY_Yds_TermPremium$DATE <- as.Date(USY_Yds_TermPremium$DATE)
first.year <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%Y"))
last.year  <- as.numeric(format(last.date,"%Y"))
USY_Yds_TermPremium$year  <- as.numeric(format(USY_Yds_TermPremium$DATE,"%Y"))
USY_Yds_TermPremium$month <- as.numeric(format(USY_Yds_TermPremium$DATE,"%m"))
USY_Yds_TermPremium_Q <- data.frame(USY_Yds_TermPremium[1,])
count <- 0
for(year in first.year:last.year){
for(Q in 1:4){
count <- count + 1
data.tempo <- subset(USY_Yds_TermPremium,(year==year)&(month %in% c(3*(Q-1) + 1:3)))
USY_Yds_TermPremium_Q[count,] <- apply(data.tempo,2,function(x){mean(x,na.rm=TRUE)})
data.tempo$Date[count] <- as.Date(paste(year,"-",3*(Q-1)+1,"-01",sep=""))
}
}
year
count
data.tempo
year
for(Year in first.year:last.year){
for(Q in 1:4){
count <- count + 1
data.tempo <- subset(USY_Yds_TermPremium,(year==Year)&(month %in% c(3*(Q-1) + 1:3)))
USY_Yds_TermPremium_Q[count,] <- apply(data.tempo,2,function(x){mean(x,na.rm=TRUE)})
data.tempo$Date[count] <- as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
}
}
data.tempo
dim(data.tempo)
USY_Yds_TermPremium_Q[count,] <- apply(data.tempo,2,function(x){mean(x,na.rm=TRUE)})
USY_Yds_TermPremium_Q[count,]
USY_Yds_TermPremium_Q[count,2:dim(USY_Yds_TermPremium_Q)[2]] <-
apply(data.tempo[,2:dim(USY_Yds_TermPremium_Q)[2]],2,function(x){mean(x,na.rm=TRUE)})
data.tempo$Date[count] <- as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
USY_Yds_TermPremium <- read.csv("data/USY_Yds_TermPremium.csv")
USY_Yds_TermPremium$DATE <- as.Date(USY_Yds_TermPremium$DATE)
first.year <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%Y"))
last.year  <- as.numeric(format(last.date,"%Y"))
USY_Yds_TermPremium$year  <- as.numeric(format(USY_Yds_TermPremium$DATE,"%Y"))
USY_Yds_TermPremium$month <- as.numeric(format(USY_Yds_TermPremium$DATE,"%m"))
USY_Yds_TermPremium_Q <- data.frame(USY_Yds_TermPremium[1,])
count <- 0
for(Year in first.year:last.year){
for(Q in 1:4){
count <- count + 1
data.tempo <- subset(USY_Yds_TermPremium,(year==Year)&(month %in% c(3*(Q-1) + 1:3)))
USY_Yds_TermPremium_Q[count,2:dim(USY_Yds_TermPremium_Q)[2]] <-
apply(data.tempo[,2:dim(USY_Yds_TermPremium_Q)[2]],2,function(x){mean(x,na.rm=TRUE)})
data.tempo$Date[count,1] <- as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
}
}
as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
data.tempo$Date[count,1]
USY_Yds_TermPremium <- read.csv("data/USY_Yds_TermPremium.csv")
USY_Yds_TermPremium$DATE <- as.Date(USY_Yds_TermPremium$DATE)
first.year <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%Y"))
last.year  <- as.numeric(format(last.date,"%Y"))
USY_Yds_TermPremium$year  <- as.numeric(format(USY_Yds_TermPremium$DATE,"%Y"))
USY_Yds_TermPremium$month <- as.numeric(format(USY_Yds_TermPremium$DATE,"%m"))
USY_Yds_TermPremium_Q <- data.frame(USY_Yds_TermPremium[1,])
count <- 0
for(Year in first.year:last.year){
for(Q in 1:4){
count <- count + 1
data.tempo <- subset(USY_Yds_TermPremium,(year==Year)&(month %in% c(3*(Q-1) + 1:3)))
USY_Yds_TermPremium_Q[count,2:dim(USY_Yds_TermPremium_Q)[2]] <-
apply(data.tempo[,2:dim(USY_Yds_TermPremium_Q)[2]],2,function(x){mean(x,na.rm=TRUE)})
data.tempo$DATE[count] <- as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
}
}
USY_Yds_TermPremium_Q$DATE[count] <- as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
USY_Yds_TermPremium <- read.csv("data/USY_Yds_TermPremium.csv")
USY_Yds_TermPremium$DATE <- as.Date(USY_Yds_TermPremium$DATE)
first.year <- as.numeric(format(USY_Yds_TermPremium$DATE[1],"%Y"))
last.year  <- as.numeric(format(last.date,"%Y"))
USY_Yds_TermPremium$year  <- as.numeric(format(USY_Yds_TermPremium$DATE,"%Y"))
USY_Yds_TermPremium$month <- as.numeric(format(USY_Yds_TermPremium$DATE,"%m"))
USY_Yds_TermPremium_Q <- data.frame(USY_Yds_TermPremium[1,])
count <- 0
for(Year in first.year:last.year){
for(Q in 1:4){
count <- count + 1
data.tempo <- subset(USY_Yds_TermPremium,(year==Year)&(month %in% c(3*(Q-1) + 1:3)))
USY_Yds_TermPremium_Q[count,2:dim(USY_Yds_TermPremium_Q)[2]] <-
apply(data.tempo[,2:dim(USY_Yds_TermPremium_Q)[2]],2,function(x){mean(x,na.rm=TRUE)})
USY_Yds_TermPremium_Q$DATE[count] <- as.Date(paste(Year,"-",3*(Q-1)+1,"-01",sep=""))
}
}
plot(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP10,type="l")
plot(vec.dates,fitted.10yr.underQ-fitted.10yr.underP,type="l",col="red")
plot(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP10,type="l")
par(new=TRUE)
plot(vec.dates,fitted.10yr.underQ-fitted.10yr.underP,type="l",col="red")
vec.dates
USY_Yds_TermPremium_Q$DATE
plot(vec.dates,fitted.2yr.underQ-fitted.2yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.01,.025),col="blue",
main="(c) 2-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP2,
col="dark grey",lwd=2,lty=3)
plot(vec.dates,fitted.2yr.underQ-fitted.2yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.01,.025),col="blue",
main="(c) 2-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP2/100,
col="dark grey",lwd=2,lty=3)
plot(vec.dates,fitted.2yr.underQ-fitted.2yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.005,.015),col="blue",
main="(c) 2-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP2/100,
col="dark grey",lwd=2,lty=3)
plot(vec.dates,fitted.2yr.underQ-fitted.2yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.005,.015),col="blue",
main="(c) 2-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP2/100,
col="dark grey",lwd=3,lty=3)
plot(vec.dates,fitted.2yr.underQ-fitted.2yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.005,.015),col="blue",
main="(c) 2-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP2/100,
col="dark grey",lwd=3,lty=2)
plot(vec.dates,fitted.2yr.underQ-fitted.2yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.005,.015),col="blue",
main="(c) 2-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP2/100,
col="dark grey",lwd=3,lty=1)
plot(vec.dates,fitted.10yr.underQ-fitted.10yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.005,.015),col="blue",
main="(d) 10-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP10/100,
col="dark grey",lwd=3,lty=1)
plot(vec.dates,fitted.10yr.underQ-fitted.10yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.005,.025),col="blue",
main="(d) 10-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP10/100,
col="dark grey",lwd=3,lty=1)
plot(vec.dates,fitted.10yr.underQ-fitted.10yr.underP,type="l",lwd=3,lty=3,
ylim=c(-.005,.05),col="blue",
main="(d) 10-year term premium",xlab="",ylab="",las=1)
lines(USY_Yds_TermPremium_Q$DATE,USY_Yds_TermPremium_Q$THREEFYTP10/100,
col="dark grey",lwd=3,lty=1)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/chart.historical.fit.R", echo=TRUE)
data.frame.TP <- data.frame(DATE=vec.dates,
TP2=fitted.2yr.underQ-fitted.2yr.underP,
TP10=fitted.10yr.underQ-fitted.10yr.underP)
data.frame.TP <- merge(data.frame.TP,USY_Yds_TermPremium_Q,by=DATE)
data.frame.TP <- data.frame(DATE=vec.dates,
TP2=100*(fitted.2yr.underQ-fitted.2yr.underP),
TP10=100*(fitted.10yr.underQ-fitted.10yr.underP))
data.frame.TP <- merge(data.frame.TP,USY_Yds_TermPremium_Q,by="DATE")
View(data.frame.TP)
corr(data.frame.TP$TP2,data.frame.TP$THREEFYTP2)
cor(data.frame.TP$TP2,data.frame.TP$THREEFYTP2)
cor(data.frame.TP$TP10,data.frame.TP$THREEFYTP10)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/estimation/list_moments_2B_fitted.R", echo=TRUE)
all.multiplicative.factors
length(all.multiplicative.factors)
all.weights.US
all.target.names
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/procedures/set.of.procedures.Estimation.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
nb.dec <- 2 # number of decimal numbers
format.nb  <- paste("%.",nb.dec,"f",sep="")
format.nb0 <- paste("%.",0,"f",sep="")
format.nb1 <- paste("%.",1,"f",sep="")
format.nb5 <- paste("%.",5,"f",sep="")
sprintf(format.nb,pi)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
latex.table <- NULL
for(i in 1:length(names.of.rows)){
this.line <- names.of.rows[i]
this.line <- paste(this.line,"&",
sprintf(format.nb5,mean(observed[,i],na.rm=TRUE)),"&",
sprintf(format.nb5,mean(fitted[!is.na(observed[,i]),i],na.rm=TRUE)),"&",
"\\\\",
sep="")
latex.table <- rbind(latex.table,this.line)
}
latex.table
latex.table <- NULL
for(i in 1:length(names.of.rows)){
this.line <- names.of.rows[i]
this.line <- paste(this.line,"&",
sprintf(format.nb5,mean(observed[,i],na.rm=TRUE)),"&",
sprintf(format.nb5,mean(fitted[!is.na(observed[,i]),i],na.rm=TRUE)),"&",
sprintf(format.nb5,sd(observed[,i],na.rm=TRUE)),"&",
sprintf(format.nb5,sd(fitted[!is.na(observed[,i]),i],na.rm=TRUE)),"&",
"\\\\",
sep="")
latex.table <- rbind(latex.table,this.line)
}
latex.table
stdev.error
latex.table <- NULL
for(i in 1:length(names.of.rows)){
this.line <- names.of.rows[i]
this.line <- paste(this.line,"&",
sprintf(format.nb5,mean(observed[,i],na.rm=TRUE)),"&",
sprintf(format.nb5,mean(fitted[!is.na(observed[,i]),i],na.rm=TRUE)),"&",
sprintf(format.nb5,sd(observed[,i],na.rm=TRUE)),"&",
sprintf(format.nb5,sd(fitted[!is.na(observed[,i]),i],na.rm=TRUE)),"&",
sprintf(format.nb5,stdev.error[i]),
"\\\\",
sep="")
latex.table <- rbind(latex.table,this.line)
}
latex.table
all.target.names
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.tables.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.tables.R", echo=TRUE)
sprintf(paste("%.",2,"f",sep=""),
quantile.density(pdf,vec.of.quantiles[k]))
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
latex.table
latex.table
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
latex.table
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/make.table.yds.fit.R", echo=TRUE)
latex.table
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
save(Full.Theta,file = "estimation/results/tempo.Rdat")
name.of.result.file <- "last.result" # name of result file (contains Full.Theta = parameterization of the model)
save(Full.Theta,file = paste("estimation/results/",name.of.result.file,".Rdat",sep=""))
if(indic.save.results.if.estim == 1){
# Overwrite previous result file:
save(Full.Theta,file = paste("estimation/results/",result.file,".Rdat",sep=""))
}
indic.save.results.if.estim
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/main.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/chart.historical.fit.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/chart.historical.fit.R", echo=TRUE)
source("~/Dropbox/Research/13_Macrofounded_SDF/3_Codes/GDP_LB/prepare_outputs/chart.historical.fit.R", echo=TRUE)
all.target.names
